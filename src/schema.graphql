   # import UserOrderByInput from './generated/prisma.graphql'

   type Query {
        me: User!
        users(query: String, first: Int, skip: Int, after: String, orderBy: UserOrderByInput): [User!]!
    }
    
    type Mutation {
        loginUser(data: LoginInput!):AuthPayload!
        createUser(data: CreateUserInput!):AuthPayload!
        deleteUser:User!
        updateUser(data: UpdateUserInput!):User!
    }

    # type Subscription {
    # }

    input LoginInput {
        email: String!
        password: String!
    }

    input CreateUserInput {
        name: String!
        email:String!
        password: String!
    }

    input UpdateUserInput {
        name: String
        email: String
        password: String
    }

    type User {
        id: ID!
        name: String!
        email: String
        password:String!
        updatedAt: String!
        createdAt: String!
    }

    enum MutationType {
        CREATED
        UPDATED
        DELETED
    }

    type AuthPayload {
        token: String!
        user: User!
    }